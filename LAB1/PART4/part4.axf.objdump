
C:/EMBEDDED/LAB1/PART4/part4.axf:     file format elf32-littlearm


Disassembly of section .text:

00000000 <__cs3_interrupt_vector>:
/* Program that converts a binary number to decimal */
			.text 
			.global 	_start 
_start: 
			LDR 		R4, =N 
   0:	e59f4040 	ldr	r4, [pc, #64]	; 48 <Digits+0x4>
			ADD 		R5, R4, #4 		// R5 points to the decimal digits storage location 
   4:	e2845004 	add	r5, r4, #4
			LDR 		R4, [R4] 		// R4 holds N
   8:	e5944000 	ldr	r4, [r4]
			MOV 		R0, R4 			// parameter for DIVIDE goes in R0 
   c:	e1a00004 	mov	r0, r4
			BL 			DIVIDE 
  10:	eb000002 	bl	20 <DIVIDE>
			STRB 		R1, [R5, #1] 	// Tens digit is in R1 	
  14:	e5c51001 	strb	r1, [r5, #1]
			STRB 		R0, [R5] 		// Ones digit is in R0
  18:	e5c50000 	strb	r0, [r5]

0000001c <END>:
END: 		B 			END
  1c:	eafffffe 	b	1c <END>

00000020 <DIVIDE>:

/* Subroutine to perform the integer division R0 / 10. 
* Returns: quotient in R1, and remainder in R0 */ 

DIVIDE: 	MOV 		R2, #0 
  20:	e3a02000 	mov	r2, #0

00000024 <CONT>:
CONT: 		CMP 		R0, #10 
  24:	e350000a 	cmp	r0, #10
			BLT 		DIV_END 
  28:	ba000002 	blt	38 <DIV_END>
			SUB 		R0, #10 
  2c:	e240000a 	sub	r0, r0, #10
			ADD 		R2, #1 
  30:	e2822001 	add	r2, r2, #1
			B 			CONT 
  34:	eafffffa 	b	24 <CONT>

00000038 <DIV_END>:
DIV_END: 	MOV 		R1, R2 			// return quotient in R1 (remainder is in R0) 
  38:	e1a01002 	mov	r1, r2
			BX 			LR
  3c:	e12fff1e 	bx	lr

00000040 <N>:
  40:	0000004c 	.word	0x0000004c

00000044 <Digits>:
  44:	00000000 	.word	0x00000000
  48:	00000040 	.word	0x00000040
