
C:/EMBEDDED/LAB6/PART4/PART4.axf:     file format elf32-littlearm


Disassembly of section .text:

00000000 <__cs3_interrupt_vector>:
   0:	18 f0 9f e5 18 f0 9f e5 18 f0 9f e5 18 f0 9f e5     ................
  10:	18 f0 9f e5 18 f0 9f e5 18 f0 9f e5 18 f0 9f e5     ................
  20:	40 00 00 00 d4 08 00 00 d8 08 00 00 dc 08 00 00     @...............
  30:	e0 08 00 00 d0 08 00 00 e4 08 00 00 e8 08 00 00     ................

00000040 <__cs3_reset>:
  40:	ea000026 	b	e0 <__cs3_start_asm_sim>

00000044 <__cs3_start_c>:
  44:	e59f608c 	ldr	r6, [pc, #140]	; d8 <__cs3_region_zero_size_ram+0x78>
  48:	e3560000 	cmp	r6, #0
  4c:	e92d4080 	push	{r7, lr}
  50:	e2466001 	sub	r6, r6, #1
  54:	0a00001e 	beq	d4 <__cs3_region_zero_size_ram+0x74>
  58:	e59f507c 	ldr	r5, [pc, #124]	; dc <__cs3_region_zero_size_ram+0x7c>
  5c:	e3a00000 	mov	r0, #0
  60:	e3a01000 	mov	r1, #0
  64:	e515200c 	ldr	r2, [r5, #-12]
  68:	e515e010 	ldr	lr, [r5, #-16]
  6c:	e5154008 	ldr	r4, [r5, #-8]
  70:	e15e0002 	cmp	lr, r2
  74:	00822004 	addeq	r2, r2, r4
  78:	0a000009 	beq	a4 <__cs3_region_zero_size_ram+0x44>
  7c:	e3540000 	cmp	r4, #0
  80:	0a000007 	beq	a4 <__cs3_region_zero_size_ram+0x44>
  84:	e1a07002 	mov	r7, r2
  88:	e1a0c002 	mov	r12, r2
  8c:	e8be000c 	ldm	lr!, {r2, r3}
  90:	e8ac000c 	stmia	r12!, {r2, r3}
  94:	e067300c 	rsb	r3, r7, r12
  98:	e1540003 	cmp	r4, r3
  9c:	e1a0200c 	mov	r2, r12
  a0:	1afffff9 	bne	8c <__cs3_region_zero_size_ram+0x2c>
  a4:	e515e004 	ldr	lr, [r5, #-4]
  a8:	e35e0000 	cmp	lr, #0
  ac:	11a03002 	movne	r3, r2
  b0:	0a000003 	beq	c4 <__cs3_region_zero_size_ram+0x64>
  b4:	e8a30003 	stmia	r3!, {r0, r1}
  b8:	e062c003 	rsb	r12, r2, r3
  bc:	e15e000c 	cmp	lr, r12
  c0:	1afffffb 	bne	b4 <__cs3_region_zero_size_ram+0x54>
  c4:	e2466001 	sub	r6, r6, #1
  c8:	e3760001 	cmn	r6, #1
  cc:	e2855014 	add	r5, r5, #20
  d0:	1affffe3 	bne	64 <__cs3_region_zero_size_ram+0x4>
  d4:	eb0001e4 	bl	86c <__cs3_premain>
  d8:	00000001 	.word	0x00000001
  dc:	000009d0 	.word	0x000009d0

000000e0 <__cs3_start_asm_sim>:
  e0:	e28f103c 	add	r1, pc, #60	; 0x3c
  e4:	e3a00016 	mov	r0, #22
  e8:	ef123456 	svc	0x00123456
  ec:	e3500000 	cmp	r0, #0
  f0:	ba000008 	blt	118 <__cs3_start_asm_sim+0x38>
  f4:	e59f2028 	ldr	r2, [pc, #40]	; 124 <__cs3_heap_start_ptr>
  f8:	e59fd01c 	ldr	sp, [pc, #28]	; 11c <__cs3_start_asm_sim+0x3c>
  fc:	e5920008 	ldr	r0, [r2, #8]
 100:	e3500000 	cmp	r0, #0
 104:	11a0d000 	movne	sp, r0
 108:	e59f1010 	ldr	r1, [pc, #16]	; 120 <__cs3_start_asm_sim+0x40>
 10c:	e5920004 	ldr	r0, [r2, #4]
 110:	e3500000 	cmp	r0, #0
 114:	15810000 	strne	r0, [r1]
 118:	eaffffc9 	b	44 <__cs3_start_c>
 11c:	3ffffff8 	.word	0x3ffffff8
 120:	00000e18 	.word	0x00000e18

00000124 <__cs3_heap_start_ptr>:
 124:	00000e80 	.word	0x00000e80

00000128 <_start>:
 128:	e51fd000 	ldr	sp, [pc, #-0]	; 130 <_start+0x8>
 12c:	eaffffc4 	b	44 <__cs3_start_c>
 130:	3ffffff8 	.word	0x3ffffff8

00000134 <deregister_tm_clones>:
 134:	e92d4008 	push	{r3, lr}
 138:	e59f002c 	ldr	r0, [pc, #44]	; 16c <deregister_tm_clones+0x38>
 13c:	e59f302c 	ldr	r3, [pc, #44]	; 170 <deregister_tm_clones+0x3c>
 140:	e0603003 	rsb	r3, r0, r3
 144:	e3530006 	cmp	r3, #6
 148:	8a000001 	bhi	154 <deregister_tm_clones+0x20>
 14c:	e8bd4008 	pop	{r3, lr}
 150:	e12fff1e 	bx	lr
 154:	e59f3018 	ldr	r3, [pc, #24]	; 174 <deregister_tm_clones+0x40>
 158:	e3530000 	cmp	r3, #0
 15c:	0afffffa 	beq	14c <deregister_tm_clones+0x18>
 160:	e1a0e00f 	mov	lr, pc
 164:	e12fff13 	bx	r3
 168:	eafffff7 	b	14c <deregister_tm_clones+0x18>
 16c:	00000e20 	.word	0x00000e20
 170:	00000e23 	.word	0x00000e23
 174:	00000000 	.word	0x00000000

00000178 <register_tm_clones>:
 178:	e92d4008 	push	{r3, lr}
 17c:	e59f0034 	ldr	r0, [pc, #52]	; 1b8 <register_tm_clones+0x40>
 180:	e59f3034 	ldr	r3, [pc, #52]	; 1bc <register_tm_clones+0x44>
 184:	e0603003 	rsb	r3, r0, r3
 188:	e1a03143 	asr	r3, r3, #2
 18c:	e0833fa3 	add	r3, r3, r3, lsr #31
 190:	e1b010c3 	asrs	r1, r3, #1
 194:	1a000001 	bne	1a0 <register_tm_clones+0x28>
 198:	e8bd4008 	pop	{r3, lr}
 19c:	e12fff1e 	bx	lr
 1a0:	e59f2018 	ldr	r2, [pc, #24]	; 1c0 <register_tm_clones+0x48>
 1a4:	e3520000 	cmp	r2, #0
 1a8:	0afffffa 	beq	198 <register_tm_clones+0x20>
 1ac:	e1a0e00f 	mov	lr, pc
 1b0:	e12fff12 	bx	r2
 1b4:	eafffff7 	b	198 <register_tm_clones+0x20>
 1b8:	00000e20 	.word	0x00000e20
 1bc:	00000e20 	.word	0x00000e20
 1c0:	00000000 	.word	0x00000000

000001c4 <__do_global_dtors_aux>:
 1c4:	e92d4010 	push	{r4, lr}
 1c8:	e59f402c 	ldr	r4, [pc, #44]	; 1fc <__do_global_dtors_aux+0x38>
 1cc:	e5d43000 	ldrb	r3, [r4]
 1d0:	e3530000 	cmp	r3, #0
 1d4:	1a000006 	bne	1f4 <__do_global_dtors_aux+0x30>
 1d8:	ebffffd5 	bl	134 <deregister_tm_clones>
 1dc:	e59f301c 	ldr	r3, [pc, #28]	; 200 <__do_global_dtors_aux+0x3c>
 1e0:	e3530000 	cmp	r3, #0
 1e4:	159f0018 	ldrne	r0, [pc, #24]	; 204 <__do_global_dtors_aux+0x40>
 1e8:	1320f000 	nopne	{0}
 1ec:	e3a03001 	mov	r3, #1
 1f0:	e5c43000 	strb	r3, [r4]
 1f4:	e8bd4010 	pop	{r4, lr}
 1f8:	e12fff1e 	bx	lr
 1fc:	00000e20 	.word	0x00000e20
 200:	00000000 	.word	0x00000000
 204:	00000974 	.word	0x00000974

00000208 <frame_dummy>:
 208:	e92d4008 	push	{r3, lr}
 20c:	e59f3034 	ldr	r3, [pc, #52]	; 248 <frame_dummy+0x40>
 210:	e3530000 	cmp	r3, #0
 214:	159f0030 	ldrne	r0, [pc, #48]	; 24c <frame_dummy+0x44>
 218:	159f1030 	ldrne	r1, [pc, #48]	; 250 <frame_dummy+0x48>
 21c:	1320f000 	nopne	{0}
 220:	e59f002c 	ldr	r0, [pc, #44]	; 254 <frame_dummy+0x4c>
 224:	e5903000 	ldr	r3, [r0]
 228:	e3530000 	cmp	r3, #0
 22c:	0a000003 	beq	240 <frame_dummy+0x38>
 230:	e59f3020 	ldr	r3, [pc, #32]	; 258 <frame_dummy+0x50>
 234:	e3530000 	cmp	r3, #0
 238:	11a0e00f 	movne	lr, pc
 23c:	112fff13 	bxne	r3
 240:	e8bd4008 	pop	{r3, lr}
 244:	eaffffcb 	b	178 <register_tm_clones>
 248:	00000000 	.word	0x00000000
 24c:	00000974 	.word	0x00000974
 250:	00000e24 	.word	0x00000e24
 254:	000009d0 	.word	0x000009d0
 258:	00000000 	.word	0x00000000

0000025c <swnum>:
int flag=0;

int swnum(int num)						//CONVERT TO HEX VALUES
{
	int hex;
	switch(num)
 25c:	e3500009 	cmp	r0, #9
 260:	979ff100 	ldrls	pc, [pc, r0, lsl #2]
 264:	ea00001c 	b	2dc <swnum+0x80>
 268:	000002d8 	.word	0x000002d8
 26c:	00000290 	.word	0x00000290
 270:	00000298 	.word	0x00000298
 274:	000002a0 	.word	0x000002a0
 278:	000002a8 	.word	0x000002a8
 27c:	000002b0 	.word	0x000002b0
 280:	000002b8 	.word	0x000002b8
 284:	000002c0 	.word	0x000002c0
 288:	000002c8 	.word	0x000002c8
 28c:	000002d0 	.word	0x000002d0
	{
		case 0:
			hex=0b00111111;
			break;
		case 1:
			hex=0b00000110;
 290:	e3a03006 	mov	r3, #6
			break;
 294:	ea000010 	b	2dc <swnum+0x80>
		case 2:
			hex=0b01011011;
 298:	e3a0305b 	mov	r3, #91	; 0x5b
			break;
 29c:	ea00000e 	b	2dc <swnum+0x80>
		case 3:
			hex=0b01001111;
 2a0:	e3a0304f 	mov	r3, #79	; 0x4f
			break;
 2a4:	ea00000c 	b	2dc <swnum+0x80>
		case 4:
			hex=0b01100110;
 2a8:	e3a03066 	mov	r3, #102	; 0x66
			break;
 2ac:	ea00000a 	b	2dc <swnum+0x80>
		case 5:
			hex=0b01101101;
 2b0:	e3a0306d 	mov	r3, #109	; 0x6d
			break;
 2b4:	ea000008 	b	2dc <swnum+0x80>
		case 6:
			hex=0b01111101;
 2b8:	e3a0307d 	mov	r3, #125	; 0x7d
			break;
 2bc:	ea000006 	b	2dc <swnum+0x80>
		case 7:
			hex=0b00000111;
 2c0:	e3a03007 	mov	r3, #7
			break;
 2c4:	ea000004 	b	2dc <swnum+0x80>
		case 8:
			hex=0b01111111;
 2c8:	e3a0307f 	mov	r3, #127	; 0x7f
			break;
 2cc:	ea000002 	b	2dc <swnum+0x80>
		case 9:
			hex=0b01100111;
 2d0:	e3a03067 	mov	r3, #103	; 0x67
			break;
 2d4:	ea000000 	b	2dc <swnum+0x80>
{
	int hex;
	switch(num)
	{
		case 0:
			hex=0b00111111;
 2d8:	e3a0303f 	mov	r3, #63	; 0x3f
			break;
		default:
			break;
	}
	return hex;
}
 2dc:	e1a00003 	mov	r0, r3
 2e0:	e12fff1e 	bx	lr

000002e4 <div>:

void div(int num)						//GET EACH VALUE FOR EACH HEX
{
 2e4:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, r10, lr}
	m2=num/100000;
 2e8:	e30ba589 	movw	r10, #46473	; 0xb589
 2ec:	e341a4f8 	movt	r10, #5368	; 0x14f8
 2f0:	e0c5109a 	smull	r1, r5, r10, r0
 2f4:	e1a03fc0 	asr	r3, r0, #31
 2f8:	e06356c5 	rsb	r5, r3, r5, asr #13
 2fc:	e3004e3c 	movw	r4, #3644	; 0xe3c
 300:	e3404000 	movt	r4, #0
 304:	e5845000 	str	r5, [r4]
	d1=num%10;
 308:	e3066667 	movw	r6, #26215	; 0x6667
 30c:	e3466666 	movt	r6, #26214	; 0x6666
 310:	e0c12096 	smull	r2, r1, r6, r0
 314:	e0633141 	rsb	r3, r3, r1, asr #2
 318:	e0833103 	add	r3, r3, r3, lsl #2
 31c:	e0403083 	sub	r3, r0, r3, lsl #1
 320:	e5843004 	str	r3, [r4, #4]
	num-=d1;
 324:	e063e000 	rsb	lr, r3, r0
	d2=num%100;
 328:	e308851f 	movw	r8, #34079	; 0x851f
 32c:	e34581eb 	movt	r8, #20971	; 0x51eb
 330:	e0cc1e98 	smull	r1, r12, r8, lr
 334:	e1a02fce 	asr	r2, lr, #31
 338:	e062c2cc 	rsb	r12, r2, r12, asr #5
 33c:	e3a02064 	mov	r2, #100	; 0x64
 340:	e06cec92 	mls	r12, r2, r12, lr
	num-=d2;
 344:	e06ce00e 	rsb	lr, r12, lr
	d2=d2/10;
 348:	e0c62c96 	smull	r2, r6, r6, r12
 34c:	e1a0cfcc 	asr	r12, r12, #31
 350:	e06c6146 	rsb	r6, r12, r6, asr #2
 354:	e5846008 	str	r6, [r4, #8]
	s1=num%1000;
 358:	e3047dd3 	movw	r7, #19923	; 0x4dd3
 35c:	e3417062 	movt	r7, #4194	; 0x1062
 360:	e0c12e97 	smull	r2, r1, r7, lr
 364:	e1a02fce 	asr	r2, lr, #31
 368:	e0621341 	rsb	r1, r2, r1, asr #6
 36c:	e3a02ffa 	mov	r2, #1000	; 0x3e8
 370:	e061e192 	mls	r1, r2, r1, lr
	num-=s1;
 374:	e061e00e 	rsb	lr, r1, lr
	s1=s1/100;
 378:	e0c82198 	smull	r2, r8, r8, r1
 37c:	e1a01fc1 	asr	r1, r1, #31
 380:	e06182c8 	rsb	r8, r1, r8, asr #5
 384:	e584800c 	str	r8, [r4, #12]
	s2=num%10000;
 388:	e3080bad 	movw	r0, #35757	; 0x8bad
 38c:	e34608db 	movt	r0, #26843	; 0x68db
 390:	e0c12e90 	smull	r2, r1, r0, lr
 394:	e1a02fce 	asr	r2, lr, #31
 398:	e0622641 	rsb	r2, r2, r1, asr #12
 39c:	e3021710 	movw	r1, #10000	; 0x2710
 3a0:	e062e291 	mls	r2, r1, r2, lr
	num-=s2;
	s2=s2/1000;
 3a4:	e0c71297 	smull	r1, r7, r7, r2
 3a8:	e1a01fc2 	asr	r1, r2, #31
 3ac:	e0617347 	rsb	r7, r1, r7, asr #6
 3b0:	e5847010 	str	r7, [r4, #16]
	d2=d2/10;
	s1=num%1000;
	num-=s1;
	s1=s1/100;
	s2=num%10000;
	num-=s2;
 3b4:	e062200e 	rsb	r2, r2, lr
	s2=s2/1000;
	m1=num%100000;
 3b8:	e0ca129a 	smull	r1, r10, r10, r2
 3bc:	e1a01fc2 	asr	r1, r2, #31
 3c0:	e061a6ca 	rsb	r10, r1, r10, asr #13
 3c4:	e30816a0 	movw	r1, #34464	; 0x86a0
 3c8:	e3401001 	movt	r1, #1
 3cc:	e0622a91 	mls	r2, r1, r10, r2
	num-=m1;
	m1=m1/10000;
 3d0:	e0c01290 	smull	r1, r0, r0, r2
 3d4:	e1a02fc2 	asr	r2, r2, #31
 3d8:	e0629640 	rsb	r9, r2, r0, asr #12
 3dc:	e5849014 	str	r9, [r4, #20]
	
	h1=swnum(d1);
 3e0:	e1a00003 	mov	r0, r3
 3e4:	ebffff9c 	bl	25c <swnum>
 3e8:	e1a0a000 	mov	r10, r0
 3ec:	e5840018 	str	r0, [r4, #24]
	h2=swnum(d2);
 3f0:	e1a00006 	mov	r0, r6
 3f4:	ebffff98 	bl	25c <swnum>
 3f8:	e1a06000 	mov	r6, r0
 3fc:	e584001c 	str	r0, [r4, #28]
	h3=swnum(s1);
 400:	e1a00008 	mov	r0, r8
 404:	ebffff94 	bl	25c <swnum>
 408:	e1a08000 	mov	r8, r0
 40c:	e5840020 	str	r0, [r4, #32]
	h4=swnum(s2);
 410:	e1a00007 	mov	r0, r7
 414:	ebffff90 	bl	25c <swnum>
 418:	e1a07000 	mov	r7, r0
 41c:	e5840024 	str	r0, [r4, #36]	; 0x24
	h5=swnum(m1);
 420:	e1a00009 	mov	r0, r9
 424:	ebffff8c 	bl	25c <swnum>
 428:	e1a09000 	mov	r9, r0
 42c:	e5840028 	str	r0, [r4, #40]	; 0x28
	h6=swnum(m2);
 430:	e1a00005 	mov	r0, r5
 434:	ebffff88 	bl	25c <swnum>
 438:	e584002c 	str	r0, [r4, #44]	; 0x2c
	
	M=(h5|(h6<<8));
 43c:	e1899400 	orr	r9, r9, r0, lsl #8
 440:	e5849030 	str	r9, [r4, #48]	; 0x30
	S=(h3|(h4<<8));
 444:	e1888407 	orr	r8, r8, r7, lsl #8
 448:	e5848034 	str	r8, [r4, #52]	; 0x34
	D=(h1|(h2<<8));
 44c:	e18aa406 	orr	r10, r10, r6, lsl #8
 450:	e584a038 	str	r10, [r4, #56]	; 0x38
 454:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, r10, pc}

00000458 <printHex>:
}

void printHex()
{
	*(seg1) = ((S<<16)|D);
 458:	e30029d8 	movw	r2, #2520	; 0x9d8
 45c:	e3402000 	movt	r2, #0
 460:	e5921000 	ldr	r1, [r2]
 464:	e3003e3c 	movw	r3, #3644	; 0xe3c
 468:	e3403000 	movt	r3, #0
 46c:	e593c034 	ldr	r12, [r3, #52]	; 0x34
 470:	e5930038 	ldr	r0, [r3, #56]	; 0x38
 474:	e180080c 	orr	r0, r0, r12, lsl #16
 478:	e5810000 	str	r0, [r1]
	*(seg2) = M;
 47c:	e5922004 	ldr	r2, [r2, #4]
 480:	e5933030 	ldr	r3, [r3, #48]	; 0x30
 484:	e5823000 	str	r3, [r2]
 488:	e12fff1e 	bx	lr

0000048c <buttoncheck>:
}

void buttoncheck()
{
	if(*(buttons) != 0)
 48c:	e30039d8 	movw	r3, #2520	; 0x9d8
 490:	e3403000 	movt	r3, #0
 494:	e5933008 	ldr	r3, [r3, #8]
 498:	e5932000 	ldr	r2, [r3]
 49c:	e3520000 	cmp	r2, #0
 4a0:	0a000005 	beq	4bc <buttoncheck+0x30>
	{
		while(*(buttons) != 0);
 4a4:	e5932000 	ldr	r2, [r3]
 4a8:	e3520000 	cmp	r2, #0
 4ac:	1afffffc 	bne	4a4 <buttoncheck+0x18>
		while(*(buttons) == 0);
 4b0:	e5932000 	ldr	r2, [r3]
 4b4:	e3520000 	cmp	r2, #0
 4b8:	0afffffc 	beq	4b0 <buttoncheck+0x24>
	}
	while(*(buttons) != 0);
 4bc:	e5932000 	ldr	r2, [r3]
 4c0:	e3520000 	cmp	r2, #0
 4c4:	1afffffc 	bne	4bc <buttoncheck+0x30>
}
 4c8:	e12fff1e 	bx	lr

000004cc <main>:

void main()
{	
 4cc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
	volatile int *pritimer = (int *) 0xFFFEC600;		//BASE ADDRESS A9 PRIVATE TIMER
	*(pritimer) = counter;
 4d0:	e30039d8 	movw	r3, #2520	; 0x9d8
 4d4:	e3403000 	movt	r3, #0
 4d8:	e593200c 	ldr	r2, [r3, #12]
 4dc:	e3e03a13 	mvn	r3, #77824	; 0x13000
 4e0:	e50329ff 	str	r2, [r3, #-2559]	; 0xfffff601
	*(pritimer + 2) = 0b011;
 4e4:	e3a02003 	mov	r2, #3
 4e8:	e50329f7 	str	r2, [r3, #-2551]	; 0xfffff609
	
	for(;;)
	{	
		while(*(pritimer+3) == 0);
 4ec:	e1a04003 	mov	r4, r3
		*(pritimer+3)=1;
 4f0:	e3a08001 	mov	r8, #1
		counterReloj++;
 4f4:	e3005e3c 	movw	r5, #3644	; 0xe3c
 4f8:	e3405000 	movt	r5, #0
		if(counterReloj == 599999) counterReloj=0;
 4fc:	e30267bf 	movw	r6, #10175	; 0x27bf
 500:	e3406009 	movt	r6, #9
 504:	e3a07000 	mov	r7, #0
	*(pritimer) = counter;
	*(pritimer + 2) = 0b011;
	
	for(;;)
	{	
		while(*(pritimer+3) == 0);
 508:	e51439f3 	ldr	r3, [r4, #-2547]	; 0xfffff60d
 50c:	e3530000 	cmp	r3, #0
 510:	0afffffc 	beq	508 <main+0x3c>
		*(pritimer+3)=1;
 514:	e50489f3 	str	r8, [r4, #-2547]	; 0xfffff60d
		counterReloj++;
 518:	e595303c 	ldr	r3, [r5, #60]	; 0x3c
 51c:	e2833001 	add	r3, r3, #1
		if(counterReloj == 599999) counterReloj=0;
 520:	e1530006 	cmp	r3, r6
	
	for(;;)
	{	
		while(*(pritimer+3) == 0);
		*(pritimer+3)=1;
		counterReloj++;
 524:	01a03007 	moveq	r3, r7
 528:	e585303c 	str	r3, [r5, #60]	; 0x3c
		if(counterReloj == 599999) counterReloj=0;
		buttoncheck();
 52c:	ebffffd6 	bl	48c <buttoncheck>
		div(counterReloj);
 530:	e595003c 	ldr	r0, [r5, #60]	; 0x3c
 534:	ebffff6a 	bl	2e4 <div>
		printHex();
 538:	ebffffc6 	bl	458 <printHex>
	}
 53c:	eafffff1 	b	508 <main+0x3c>

00000540 <atexit>:
 540:	e1a01000 	mov	r1, r0
 544:	e3a00000 	mov	r0, #0
 548:	e92d4008 	push	{r3, lr}
 54c:	e1a02000 	mov	r2, r0
 550:	e1a03000 	mov	r3, r0
 554:	eb00000e 	bl	594 <__register_exitproc>
 558:	e8bd4008 	pop	{r3, lr}
 55c:	e12fff1e 	bx	lr

00000560 <exit>:
 560:	e92d4008 	push	{r3, lr}
 564:	e3a01000 	mov	r1, #0
 568:	e1a04000 	mov	r4, r0
 56c:	eb000045 	bl	688 <__call_exitprocs>
 570:	e59f3018 	ldr	r3, [pc, #24]	; 590 <exit+0x30>
 574:	e5930000 	ldr	r0, [r3]
 578:	e590303c 	ldr	r3, [r0, #60]	; 0x3c
 57c:	e3530000 	cmp	r3, #0
 580:	11a0e00f 	movne	lr, pc
 584:	112fff13 	bxne	r3
 588:	e1a00004 	mov	r0, r4
 58c:	eb0000c9 	bl	8b8 <_exit>
 590:	00000978 	.word	0x00000978

00000594 <__register_exitproc>:
 594:	e59fc0e4 	ldr	r12, [pc, #228]	; 680 <__register_exitproc+0xec>
 598:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}
 59c:	e59c4000 	ldr	r4, [r12]
 5a0:	e594c148 	ldr	r12, [r4, #328]	; 0x148
 5a4:	e35c0000 	cmp	r12, #0
 5a8:	0284cf53 	addeq	r12, r4, #332	; 0x14c
 5ac:	e59c5004 	ldr	r5, [r12, #4]
 5b0:	0584c148 	streq	r12, [r4, #328]	; 0x148
 5b4:	e355001f 	cmp	r5, #31
 5b8:	e24dd010 	sub	sp, sp, #16
 5bc:	e1a06000 	mov	r6, r0
 5c0:	da000015 	ble	61c <__register_exitproc+0x88>
 5c4:	e59f00b8 	ldr	r0, [pc, #184]	; 684 <__register_exitproc+0xf0>
 5c8:	e3500000 	cmp	r0, #0
 5cc:	1a000001 	bne	5d8 <__register_exitproc+0x44>
 5d0:	e3e00000 	mvn	r0, #0
 5d4:	ea000018 	b	63c <__register_exitproc+0xa8>
 5d8:	e3a00e19 	mov	r0, #400	; 0x190
 5dc:	e58d100c 	str	r1, [sp, #12]
 5e0:	e58d2008 	str	r2, [sp, #8]
 5e4:	e58d3004 	str	r3, [sp, #4]
 5e8:	e320f000 	nop	{0}
 5ec:	e250c000 	subs	r12, r0, #0
 5f0:	e59d100c 	ldr	r1, [sp, #12]
 5f4:	e59d2008 	ldr	r2, [sp, #8]
 5f8:	e59d3004 	ldr	r3, [sp, #4]
 5fc:	0afffff3 	beq	5d0 <__register_exitproc+0x3c>
 600:	e5945148 	ldr	r5, [r4, #328]	; 0x148
 604:	e3a00000 	mov	r0, #0
 608:	e58c0004 	str	r0, [r12, #4]
 60c:	e58c5000 	str	r5, [r12]
 610:	e584c148 	str	r12, [r4, #328]	; 0x148
 614:	e58c0188 	str	r0, [r12, #392]	; 0x188
 618:	e58c018c 	str	r0, [r12, #396]	; 0x18c
 61c:	e3560000 	cmp	r6, #0
 620:	e59c4004 	ldr	r4, [r12, #4]
 624:	1a000007 	bne	648 <__register_exitproc+0xb4>
 628:	e2843002 	add	r3, r4, #2
 62c:	e2844001 	add	r4, r4, #1
 630:	e78c1103 	str	r1, [r12, r3, lsl #2]
 634:	e58c4004 	str	r4, [r12, #4]
 638:	e3a00000 	mov	r0, #0
 63c:	e28dd010 	add	sp, sp, #16
 640:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}
 644:	e12fff1e 	bx	lr
 648:	e3a00001 	mov	r0, #1
 64c:	e1a00410 	lsl	r0, r0, r4
 650:	e08c8104 	add	r8, r12, r4, lsl #2
 654:	e3560002 	cmp	r6, #2
 658:	e59c7188 	ldr	r7, [r12, #392]	; 0x188
 65c:	e5883108 	str	r3, [r8, #264]	; 0x108
 660:	059c318c 	ldreq	r3, [r12, #396]	; 0x18c
 664:	e1877000 	orr	r7, r7, r0
 668:	01830000 	orreq	r0, r3, r0
 66c:	e1a05008 	mov	r5, r8
 670:	e5882088 	str	r2, [r8, #136]	; 0x88
 674:	e58c7188 	str	r7, [r12, #392]	; 0x188
 678:	058c018c 	streq	r0, [r12, #396]	; 0x18c
 67c:	eaffffe9 	b	628 <__register_exitproc+0x94>
 680:	00000978 	.word	0x00000978
 684:	00000000 	.word	0x00000000

00000688 <__call_exitprocs>:
 688:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
 68c:	e59f3168 	ldr	r3, [pc, #360]	; 7fc <__call_exitprocs+0x174>
 690:	e5933000 	ldr	r3, [r3]
 694:	e24dd014 	sub	sp, sp, #20
 698:	e58d3004 	str	r3, [sp, #4]
 69c:	e2833f52 	add	r3, r3, #328	; 0x148
 6a0:	e58d0008 	str	r0, [sp, #8]
 6a4:	e58d300c 	str	r3, [sp, #12]
 6a8:	e1a07001 	mov	r7, r1
 6ac:	e3a08001 	mov	r8, #1
 6b0:	e59d3004 	ldr	r3, [sp, #4]
 6b4:	e5936148 	ldr	r6, [r3, #328]	; 0x148
 6b8:	e3560000 	cmp	r6, #0
 6bc:	e59db00c 	ldr	r11, [sp, #12]
 6c0:	0a000033 	beq	794 <__call_exitprocs+0x10c>
 6c4:	e5965004 	ldr	r5, [r6, #4]
 6c8:	e2554001 	subs	r4, r5, #1
 6cc:	5286a088 	addpl	r10, r6, #136	; 0x88
 6d0:	5285501f 	addpl	r5, r5, #31
 6d4:	508a5105 	addpl	r5, r10, r5, lsl #2
 6d8:	5a000007 	bpl	6fc <__call_exitprocs+0x74>
 6dc:	ea000029 	b	788 <__call_exitprocs+0x100>
 6e0:	e5953000 	ldr	r3, [r5]
 6e4:	e1530007 	cmp	r3, r7
 6e8:	0a000005 	beq	704 <__call_exitprocs+0x7c>
 6ec:	e2444001 	sub	r4, r4, #1
 6f0:	e3740001 	cmn	r4, #1
 6f4:	e2455004 	sub	r5, r5, #4
 6f8:	0a000022 	beq	788 <__call_exitprocs+0x100>
 6fc:	e3570000 	cmp	r7, #0
 700:	1afffff6 	bne	6e0 <__call_exitprocs+0x58>
 704:	e5963004 	ldr	r3, [r6, #4]
 708:	e06a2005 	rsb	r2, r10, r5
 70c:	e2433001 	sub	r3, r3, #1
 710:	e0862002 	add	r2, r6, r2
 714:	e1530004 	cmp	r3, r4
 718:	e5123078 	ldr	r3, [r2, #-120]	; 0xffffff88
 71c:	13a01000 	movne	r1, #0
 720:	05864004 	streq	r4, [r6, #4]
 724:	15021078 	strne	r1, [r2, #-120]	; 0xffffff88
 728:	e3530000 	cmp	r3, #0
 72c:	0affffee 	beq	6ec <__call_exitprocs+0x64>
 730:	e1a02418 	lsl	r2, r8, r4
 734:	e5961188 	ldr	r1, [r6, #392]	; 0x188
 738:	e1120001 	tst	r2, r1
 73c:	e5969004 	ldr	r9, [r6, #4]
 740:	0a000016 	beq	7a0 <__call_exitprocs+0x118>
 744:	e596118c 	ldr	r1, [r6, #396]	; 0x18c
 748:	e1120001 	tst	r2, r1
 74c:	1a000016 	bne	7ac <__call_exitprocs+0x124>
 750:	e59d0008 	ldr	r0, [sp, #8]
 754:	e5151080 	ldr	r1, [r5, #-128]	; 0xffffff80
 758:	e1a0e00f 	mov	lr, pc
 75c:	e12fff13 	bx	r3
 760:	e5963004 	ldr	r3, [r6, #4]
 764:	e1530009 	cmp	r3, r9
 768:	1affffd0 	bne	6b0 <__call_exitprocs+0x28>
 76c:	e59b3000 	ldr	r3, [r11]
 770:	e1530006 	cmp	r3, r6
 774:	1affffcd 	bne	6b0 <__call_exitprocs+0x28>
 778:	e2444001 	sub	r4, r4, #1
 77c:	e3740001 	cmn	r4, #1
 780:	e2455004 	sub	r5, r5, #4
 784:	1affffdc 	bne	6fc <__call_exitprocs+0x74>
 788:	e59f1070 	ldr	r1, [pc, #112]	; 800 <__call_exitprocs+0x178>
 78c:	e3510000 	cmp	r1, #0
 790:	1a000009 	bne	7bc <__call_exitprocs+0x134>
 794:	e28dd014 	add	sp, sp, #20
 798:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, r10, r11, lr}
 79c:	e12fff1e 	bx	lr
 7a0:	e1a0e00f 	mov	lr, pc
 7a4:	e12fff13 	bx	r3
 7a8:	eaffffec 	b	760 <__call_exitprocs+0xd8>
 7ac:	e5150080 	ldr	r0, [r5, #-128]	; 0xffffff80
 7b0:	e1a0e00f 	mov	lr, pc
 7b4:	e12fff13 	bx	r3
 7b8:	eaffffe8 	b	760 <__call_exitprocs+0xd8>
 7bc:	e5963004 	ldr	r3, [r6, #4]
 7c0:	e3530000 	cmp	r3, #0
 7c4:	e5963000 	ldr	r3, [r6]
 7c8:	1a000008 	bne	7f0 <__call_exitprocs+0x168>
 7cc:	e3530000 	cmp	r3, #0
 7d0:	0a000006 	beq	7f0 <__call_exitprocs+0x168>
 7d4:	e1a00006 	mov	r0, r6
 7d8:	e58b3000 	str	r3, [r11]
 7dc:	e320f000 	nop	{0}
 7e0:	e59b6000 	ldr	r6, [r11]
 7e4:	e3560000 	cmp	r6, #0
 7e8:	1affffb5 	bne	6c4 <__call_exitprocs+0x3c>
 7ec:	eaffffe8 	b	794 <__call_exitprocs+0x10c>
 7f0:	e1a0b006 	mov	r11, r6
 7f4:	e1a06003 	mov	r6, r3
 7f8:	eafffff9 	b	7e4 <__call_exitprocs+0x15c>
 7fc:	00000978 	.word	0x00000978
 800:	00000000 	.word	0x00000000

00000804 <register_fini>:
 804:	e92d4008 	push	{r3, lr}
 808:	e59f3010 	ldr	r3, [pc, #16]	; 820 <register_fini+0x1c>
 80c:	e3530000 	cmp	r3, #0
 810:	159f000c 	ldrne	r0, [pc, #12]	; 824 <register_fini+0x20>
 814:	1bffff49 	blne	540 <atexit>
 818:	e8bd4008 	pop	{r3, lr}
 81c:	e12fff1e 	bx	lr
 820:	000009a0 	.word	0x000009a0
 824:	00000828 	.word	0x00000828

00000828 <__libc_fini_array>:
 828:	e92d4038 	push	{r3, r4, r5, lr}
 82c:	e59f5030 	ldr	r5, [pc, #48]	; 864 <__libc_fini_array+0x3c>
 830:	e59f4030 	ldr	r4, [pc, #48]	; 868 <__libc_fini_array+0x40>
 834:	e0654004 	rsb	r4, r5, r4
 838:	e1b04144 	asrs	r4, r4, #2
 83c:	10855104 	addne	r5, r5, r4, lsl #2
 840:	0a000004 	beq	858 <__libc_fini_array+0x30>
 844:	e5353004 	ldr	r3, [r5, #-4]!
 848:	e1a0e00f 	mov	lr, pc
 84c:	e12fff13 	bx	r3
 850:	e2544001 	subs	r4, r4, #1
 854:	1afffffa 	bne	844 <__libc_fini_array+0x1c>
 858:	eb000050 	bl	9a0 <__libc_fini>
 85c:	e8bd4038 	pop	{r3, r4, r5, lr}
 860:	e12fff1e 	bx	lr
 864:	000009b8 	.word	0x000009b8
 868:	000009bc 	.word	0x000009bc

0000086c <__cs3_premain>:
 86c:	e92d4008 	push	{r3, lr}
 870:	eb00001d 	bl	8ec <__libc_init_array>
 874:	e59f3030 	ldr	r3, [pc, #48]	; 8ac <__cs3_premain+0x40>
 878:	e3530000 	cmp	r3, #0
 87c:	15930000 	ldrne	r0, [r3]
 880:	01a00003 	moveq	r0, r3
 884:	e59f3024 	ldr	r3, [pc, #36]	; 8b0 <__cs3_premain+0x44>
 888:	e3530000 	cmp	r3, #0
 88c:	15931000 	ldrne	r1, [r3]
 890:	01a01003 	moveq	r1, r3
 894:	e3a02000 	mov	r2, #0
 898:	ebffff0b 	bl	4cc <main>
 89c:	e59f3010 	ldr	r3, [pc, #16]	; 8b4 <__cs3_premain+0x48>
 8a0:	e3530000 	cmp	r3, #0
 8a4:	1bffff2d 	blne	560 <exit>
 8a8:	eafffffe 	b	8a8 <__cs3_premain+0x3c>
	...
 8b4:	00000560 	.word	0x00000560

000008b8 <_exit>:
 8b8:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
 8bc:	e3a00018 	mov	r0, #24
 8c0:	e59f1004 	ldr	r1, [pc, #4]	; 8cc <_exit+0x14>
 8c4:	ef123456 	svc	0x00123456
 8c8:	eafffffe 	b	8c8 <_exit+0x10>
 8cc:	00020026 	.word	0x00020026

000008d0 <__cs3_isr_interrupt>:
 8d0:	eafffffe 	b	8d0 <__cs3_isr_interrupt>

000008d4 <__cs3_isr_undef>:
 8d4:	eafffffe 	b	8d4 <__cs3_isr_undef>

000008d8 <__cs3_isr_swi>:
 8d8:	eafffffe 	b	8d8 <__cs3_isr_swi>

000008dc <__cs3_isr_pabort>:
 8dc:	eafffffe 	b	8dc <__cs3_isr_pabort>

000008e0 <__cs3_isr_dabort>:
 8e0:	eafffffe 	b	8e0 <__cs3_isr_dabort>

000008e4 <__cs3_isr_irq>:
 8e4:	eafffffe 	b	8e4 <__cs3_isr_irq>

000008e8 <__cs3_isr_fiq>:
 8e8:	eafffffe 	b	8e8 <__cs3_isr_fiq>

000008ec <__libc_init_array>:
 8ec:	e92d4070 	push	{r4, r5, r6, lr}
 8f0:	e59f506c 	ldr	r5, [pc, #108]	; 964 <__libc_init_array+0x78>
 8f4:	e59f606c 	ldr	r6, [pc, #108]	; 968 <__libc_init_array+0x7c>
 8f8:	e0656006 	rsb	r6, r5, r6
 8fc:	e1b06146 	asrs	r6, r6, #2
 900:	12455004 	subne	r5, r5, #4
 904:	13a04000 	movne	r4, #0
 908:	0a000005 	beq	924 <__libc_init_array+0x38>
 90c:	e5b53004 	ldr	r3, [r5, #4]!
 910:	e2844001 	add	r4, r4, #1
 914:	e1a0e00f 	mov	lr, pc
 918:	e12fff13 	bx	r3
 91c:	e1560004 	cmp	r6, r4
 920:	1afffff9 	bne	90c <__libc_init_array+0x20>
 924:	e59f5040 	ldr	r5, [pc, #64]	; 96c <__libc_init_array+0x80>
 928:	e59f6040 	ldr	r6, [pc, #64]	; 970 <__libc_init_array+0x84>
 92c:	e0656006 	rsb	r6, r5, r6
 930:	eb000012 	bl	980 <_init>
 934:	e1b06146 	asrs	r6, r6, #2
 938:	12455004 	subne	r5, r5, #4
 93c:	13a04000 	movne	r4, #0
 940:	0a000005 	beq	95c <__libc_init_array+0x70>
 944:	e5b53004 	ldr	r3, [r5, #4]!
 948:	e2844001 	add	r4, r4, #1
 94c:	e1a0e00f 	mov	lr, pc
 950:	e12fff13 	bx	r3
 954:	e1560004 	cmp	r6, r4
 958:	1afffff9 	bne	944 <__libc_init_array+0x58>
 95c:	e8bd4070 	pop	{r4, r5, r6, lr}
 960:	e12fff1e 	bx	lr
 964:	00000998 	.word	0x00000998
 968:	00000998 	.word	0x00000998
 96c:	00000998 	.word	0x00000998
 970:	000009a0 	.word	0x000009a0

Disassembly of section .rodata:

00000978 <_global_impure_ptr>:
 978:	000009f0 00000043                       ....C...

00000980 <_init>:
 980:	e1a0c00d 	mov	r12, sp
 984:	e92ddff8 	push	{r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, lr, pc}
 988:	e24cb004 	sub	r11, r12, #4
 98c:	e24bd028 	sub	sp, r11, #40	; 0x28
 990:	e89d6ff0 	ldm	sp, {r4, r5, r6, r7, r8, r9, r10, r11, sp, lr}
 994:	e12fff1e 	bx	lr

00000998 <__init_array_start>:
 998:	00000804 	.word	0x00000804

0000099c <__frame_dummy_init_array_entry>:
 99c:	00000208                                ....

000009a0 <__libc_fini>:
 9a0:	e1a0c00d 	mov	r12, sp
 9a4:	e92ddff8 	push	{r3, r4, r5, r6, r7, r8, r9, r10, r11, r12, lr, pc}
 9a8:	e24cb004 	sub	r11, r12, #4
 9ac:	e24bd028 	sub	sp, r11, #40	; 0x28
 9b0:	e89d6ff0 	ldm	sp, {r4, r5, r6, r7, r8, r9, r10, r11, sp, lr}
 9b4:	e12fff1e 	bx	lr

000009b8 <__fini_array_start>:
 9b8:	000001c4 	.word	0x000001c4

000009bc <__cs3_regions>:
	...
 9c8:	00000e20 	.word	0x00000e20
 9cc:	00000060 	.word	0x00000060
